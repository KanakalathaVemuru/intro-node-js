{"version":3,"sources":["users.js"],"names":["users","Array","fill","map","_","i","id","createdAt","Date","now","email","findUser","Promise","resolve","reject","user","find","Error","deleteUser","findIndex","splice","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EACbC,GADa,CACT,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACb,SAAO;AACLC,QAAID,CADC;AAELE,eAAWC,KAAKC,GAAL,KAAaJ,CAFnB;AAGLK,WAAQ,aAAYL,CAAE;AAHjB,GAAP;AAKD,CAPa,CAAd;;AASA;AACA,MAAMM,WAAYL,EAAD,IAAQ,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACxD,QAAMC,OAAOf,MAAMgB,IAAN,CAAWD,QAAQ;AAC9B,WAAOA,KAAKT,EAAL,KAAYA,EAAnB;AACD,GAFY,CAAb;;AAIA,MAAIS,IAAJ,EAAU;AACR,WAAOF,QAAQE,IAAR,CAAP;AACD;AACDD,SAAO,IAAIG,KAAJ,CAAW,mBAAkBX,EAAG,EAAhC,CAAP;AACD,CATwB,CAAzB;;AAWA;AACA,MAAMY,aAAcZ,EAAD,IAAQ,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC1D,QAAMT,IAAIL,MAAMmB,SAAN,CAAgBJ,QAAQA,KAAKT,EAAL,KAAYA,EAApC,CAAV;;AAEA,MAAID,IAAI,CAAR,EAAW;AACTS,WAAO,IAAIG,KAAJ,CAAW,mBAAkBX,EAAG,EAAhC,CAAP;AACD;;AAEDN,QAAMoB,MAAN,CAAaf,CAAb,EAAgB,CAAhB;AACAQ,UAAQ,EAACP,EAAD,EAAR;AACD,CAT0B,CAA3B;;AAWAe,OAAOC,OAAP,GAAiB;AACfX,UADe;AAEfO;AAFe,CAAjB","file":"users.js","sourcesContent":["const users = new Array(20).fill(0)\r\n.map((_, i) => {\r\n  return {\r\n    id: i,\r\n    createdAt: Date.now() + i,\r\n    email: `readycoder${i}@gmail.com`\r\n  }\r\n})\r\n\r\n// simulate async db call with promise\r\nconst findUser = (id) => new Promise((resolve, reject) => {\r\n  const user = users.find(user => {\r\n    return user.id === id\r\n  })\r\n \r\n  if (user) {\r\n    return resolve(user)\r\n  }\r\n  reject(new Error(`No user with id ${id}`))\r\n})\r\n\r\n// simulate async db call with promise\r\nconst deleteUser = (id) => new Promise((resolve, reject) => {\r\n  const i = users.findIndex(user => user.id === id)\r\n\r\n  if (i < 0) {\r\n    reject(new Error(`No user with id ${id}`))\r\n  }\r\n\r\n  users.splice(i, 1)\r\n  resolve({id})\r\n})\r\n\r\nmodule.exports = {\r\n  findUser,\r\n  deleteUser\r\n}\r\n"]}